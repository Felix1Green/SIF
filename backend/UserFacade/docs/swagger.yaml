basePath: /
definitions:
  handlerErrors.Error:
    properties:
      errorCode:
        type: integer
      errorMessage:
        type: string
    type: object
  handlersDto.AuthOutDto:
    properties:
      userID:
        type: integer
      userMail:
        type: string
      userRole:
        type: string
      userSurname:
        type: string
      username:
        type: string
    type: object
  profile.ProfileData:
    properties:
      UserID:
        type: integer
      UserMail:
        type: string
      UserName:
        type: string
      UserRole:
        type: string
      UserSurname:
        type: string
    type: object
  user.RegisterUser:
    properties:
      password:
        type: string
      userMail:
        type: string
      userName:
        type: string
      userRole:
        type: string
      userSurname:
        type: string
    type: object
  user.User:
    properties:
      authToken:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: https://localhost:8080
info:
  contact: {}
  description: This is a backend API
  title: SIF Backend API
  version: "0.5"
paths:
  /login:
    get:
      description: Check if user is authenticated
      operationId: auth-check-id
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlersDto.AuthOutDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlerErrors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlerErrors.Error'
        "503":
          description: ""
      summary: AuthCheck
    post:
      description: authenticate user
      operationId: authenticate-id
      parameters:
      - description: user credentials
        in: body
        name: User_info
        required: true
        schema:
          $ref: '#/definitions/user.User'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlerErrors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlerErrors.Error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlerErrors.Error'
      summary: Authenticate
  /logout:
    post:
      description: log out user
      operationId: logout-id
      responses:
        "200":
          description: ""
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlerErrors.Error'
      summary: log out
  /profiles:
    get:
      description: Get all profiles of the service
      operationId: get-all-profiles-id
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/profile.ProfileData'
            type: array
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlerErrors.Error'
      summary: GetAllProfiles
  /register:
    post:
      description: Register user
      operationId: register-id
      parameters:
      - description: user credentials
        in: body
        name: User_info
        required: true
        schema:
          $ref: '#/definitions/user.RegisterUser'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlerErrors.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlerErrors.Error'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlerErrors.Error'
      summary: Register
swagger: "2.0"
